{
  "hash": "02907e25c726fbe698af01be0e775d7f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Planned vs Reactive Experiment Results\"\nformat:\n  html:\n    code-fold: true\n    page-layout: custom\njupyter: python3\n---\n\n::: {#685c24c4 .cell execution_count=1}\n``` {.python .cell-code}\nimport json\nimport glob\nimport os\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime, date\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nAGE_GROUPS = {\n    0: \"Unknown\",\n    1: \"12-17\",\n    2: \"18-24\",\n    3: \"25-34\",\n    4: \"35-44\",\n    5: \"45-54\",\n    6: \"55-64\",\n    7: \"65+\"\n}\n\n\ndef get_age_label(age_code):\n    \"\"\"Convert age code to descriptive label\"\"\"\n    return AGE_GROUPS.get(age_code, f\"Unknown({age_code})\")\n\n\ndef process_json_files(file_pattern='*.json'):\n    \"\"\"\n    Process multiple JSON files and combine their data into a DataFrame.\n    \"\"\"\n    all_error_data = []\n    all_reactive_data = []\n    false_positives_data = []\n    \n    # Construct the path to the data directory\n    data_dir = os.path.join('test_data', file_pattern)\n    # data_dir = os.path.join('data', file_pattern)\n    \n    counter = 0\n\n    for filename in glob.glob(data_dir):\n        counter += 1\n        try:\n            with open(filename, 'r') as f:\n                # Read the file content\n                file_content = f.read()\n                \n                # Split the content into separate JSON objects\n                json_objects = []\n                current_json = \"\"\n                depth = 0\n                \n                for char in file_content:\n                    current_json += char\n                    if char == '{':\n                        depth += 1\n                    elif char == '}':\n                        depth -= 1\n                        if depth == 0 and current_json.strip():\n                            try:\n                                json_obj = json.loads(current_json.strip())\n                                json_objects.append(json_obj)\n                                current_json = \"\"\n                            except json.JSONDecodeError:\n                                pass\n                \n                # Process the main data object\n                main_data = next((obj for obj in json_objects if 'results' in obj), None)\n                if main_data:\n                    # Extract user info\n                    user_info = main_data.get('userinfo', {})\n                    user_age = user_info.get('age', 0)\n                    \n                    # Handle reactive results if present\n                    if 'reactive_results' in main_data:\n                        reactive_row = {\n                            'filename': filename,\n                            'age': user_age,\n                            **main_data.get('reactive_results', {}).get('ObjectsMissed', {})\n                        }\n                        all_reactive_data.append(reactive_row)\n                    \n                    # Process main results\n                    results = main_data.get('results', {})\n                    for error_type, error_data in results.items():\n                        for instance_num, instance_data in error_data.items():\n                            row = {\n                                'error_type': error_type,\n                                'instance': int(instance_num),\n                                'missed': instance_data['missed'],\n                                'time': instance_data['time'],\n                                'filename': filename,\n                                'age': user_age\n                            }\n                            all_error_data.append(row)\n                \n                # Process false positives data\n                fp_obj = next((obj for obj in json_objects if 'FalsePositives' in obj), None)\n                if fp_obj:\n                    fp_data = fp_obj.get('FalsePositives', {})\n                    for error_type, count in fp_data.items():\n                        false_positives_data.append({\n                            'error_type': error_type,\n                            'count': count,\n                            'filename': filename,\n                            'age': user_age\n                        })\n        except Exception as e:\n            print(f\"Error processing file {filename}: {e}\")\n            continue\n\n    # Create DataFrames with default columns even if empty\n    error_df = pd.DataFrame(all_error_data) if all_error_data else pd.DataFrame(\n        columns=['error_type', 'instance', 'missed', 'time', 'filename', 'age'])\n    reactive_df = pd.DataFrame(all_reactive_data) if all_reactive_data else pd.DataFrame(\n        columns=['filename', 'age', 'rows', 'structures'])\n    false_positives_df = pd.DataFrame(false_positives_data) if false_positives_data else pd.DataFrame(\n        columns=['error_type', 'count', 'filename', 'age'])\n    \n    return error_df, reactive_df, false_positives_df, counter\n\n\ndef create_interactive_visualization(error_df, false_positives_df, type):\n    \"\"\"\n    Create interactive Plotly visualization with stacked bar plots for each error type.\n    \"\"\"\n    error_types = ['CameraError', 'FlightError', 'HardwareError']\n    age_groups = sorted(error_df['age'].unique())\n    colors = {'caught': 'lightgreen', 'missed': 'lightcoral', 'false_positives': 'lightskyblue'}\n    \n    # Create subplots with consistent width\n    fig = make_subplots(\n        rows=1, \n        cols=3, \n        subplot_titles=error_types,\n        horizontal_spacing=0.1\n    )\n    \n    # Keep track of trace indices\n    total_traces = []\n    age_group_traces = []\n    \n    # Create base traces (aggregated view)\n    for i, error_type in enumerate(error_types, 1):\n        error_data = error_df[error_df['error_type'] == error_type]\n        fp_data = false_positives_df[false_positives_df['error_type'] == error_type]\n        \n        # Calculate aggregated values\n        total_caught = (~error_data['missed']).sum()\n        total_missed = error_data['missed'].sum()\n        total_fp = fp_data['count'].sum()\n        \n        # Add traces for aggregated view\n        fig.add_trace(\n            go.Bar(\n                x=['All Ages'],\n                y=[total_caught],\n                name='Caught' if i == 1 else None,\n                marker_color=colors['caught'],\n                showlegend=i == 1,\n                legendgroup='caught',\n                hovertemplate='Caught: %{y}<br>Error Type: ' + error_type + '<extra></extra>',\n            ),\n            row=1, col=i\n        )\n        total_traces.append(len(fig.data) - 1)\n        \n        fig.add_trace(\n            go.Bar(\n                x=['All Ages'],\n                y=[total_missed],\n                name='Missed' if i == 1 else None,\n                marker_color=colors['missed'],\n                showlegend=i == 1,\n                legendgroup='missed',\n                hovertemplate='Missed: %{y}<br>Error Type: ' + error_type + '<extra></extra>',\n            ),\n            row=1, col=i\n        )\n        total_traces.append(len(fig.data) - 1)\n        \n        fig.add_trace(\n            go.Bar(\n                x=['All Ages'],\n                y=[total_fp],\n                name='False Positives' if i == 1 else None,\n                marker_color=colors['false_positives'],\n                showlegend=i == 1,\n                legendgroup='false_positives',\n                hovertemplate='False Positives: %{y}<br>Error Type: ' + error_type + '<extra></extra>',\n            ),\n            row=1, col=i\n        )\n        total_traces.append(len(fig.data) - 1)\n        \n        # Add age group traces (initially hidden)\n        for age_code in age_groups:\n            age_label = get_age_label(age_code)\n            age_data = error_data[error_data['age'] == age_code]\n            age_fp = fp_data[fp_data['age'] == age_code]\n            \n            # Calculate values\n            caught = (~age_data['missed']).sum()\n            missed = age_data['missed'].sum()\n            fp_count = age_fp['count'].sum() if not age_fp.empty else 0\n            \n            fig.add_trace(\n                go.Bar(\n                    x=[age_label],\n                    y=[caught],\n                    name='Caught',\n                    marker_color=colors['caught'],\n                    showlegend=False,\n                    visible=False,\n                    legendgroup='caught',\n                    hovertemplate=f'{age_label}<br>Caught: %{{y}}<extra></extra>',\n                ),\n                row=1, col=i\n            )\n            age_group_traces.append(len(fig.data) - 1)\n            \n            fig.add_trace(\n                go.Bar(\n                    x=[age_label],\n                    y=[missed],\n                    name='Missed',\n                    marker_color=colors['missed'],\n                    showlegend=False,\n                    visible=False,\n                    legendgroup='missed',\n                    hovertemplate=f'{age_label}<br>Missed: %{{y}}<extra></extra>',\n                ),\n                row=1, col=i\n            )\n            age_group_traces.append(len(fig.data) - 1)\n            \n            fig.add_trace(\n                go.Bar(\n                    x=[age_label],\n                    y=[fp_count],\n                    name='False Positives',\n                    marker_color=colors['false_positives'],\n                    showlegend=False,\n                    visible=False,\n                    legendgroup='false_positives',\n                    hovertemplate=f'{age_label}<br>False Positives: %{{y}}<extra></extra>',\n                ),\n                row=1, col=i\n            )\n            age_group_traces.append(len(fig.data) - 1)\n\n    # Add buttons for age group selection\n    buttons = [\n        dict(\n            args=[{\n                'visible': [i in total_traces for i in range(len(fig.data))]\n            }],\n            label=\"All Ages\",\n            method=\"restyle\"\n        )\n    ]\n    \n    # Add button for each age group\n    for idx, age_code in enumerate(age_groups):\n        age_label = get_age_label(age_code)\n        age_visibility = []\n        for i in range(len(fig.data)):\n            subplot_idx = i // (3 * (len(age_groups) + 1))\n            is_age_trace = (i - (subplot_idx * 3 * (len(age_groups) + 1)) - 3) // 3 == idx\n            age_visibility.append(is_age_trace)\n        \n        buttons.append(dict(\n            args=[{'visible': age_visibility}],\n            label=age_label,\n            method=\"restyle\"\n        ))\n\n    # Update layout\n    fig.update_layout(\n        barmode='stack',\n        title_text=f\"{type.capitalize()} Mode: Error Distribution by Type and Age Group\",\n        height=500,\n        width=1000,\n        showlegend=True,\n        legend_title_text=\"Error Categories\",\n        hovermode='x unified',\n        margin=dict(l=50, r=120, t=130, b=50),\n        updatemenus=[dict(\n            buttons=buttons,\n            direction=\"down\",\n            showactive=True,\n            x=1.2,\n            xanchor=\"right\",\n            y=1.1,\n            yanchor=\"bottom\",\n            bgcolor='white',\n            bordercolor='darkgray',\n            font=dict(size=12),\n            pad=dict(r=10, t=10)\n        )],\n        annotations=[\n            dict(\n                text=title,\n                x=x,\n                y=1.025,\n                xref=\"paper\",\n                yref=\"paper\",\n                showarrow=False,\n                font=dict(size=14)\n            )\n            for title, x in zip(error_types, [0.13, 0.5, 0.87])\n        ]\n    )\n\n    # Update axes labels\n    fig.update_yaxes(title_text=\"Count\", row=1, col=1)\n    \n    return fig\n\n\ndef create_interactive_visualization(error_df, false_positives_df, type):\n    \"\"\"\n    Create interactive Plotly visualization with stacked bar plots for each error type.\n    \"\"\"\n    error_types = ['CameraError', 'FlightError', 'HardwareError']\n    age_groups = sorted(error_df['age'].unique())\n    colors = {'caught': 'lightgreen', 'missed': 'lightcoral', 'false_positives': 'lightskyblue'}\n    \n    # Create subplots with consistent width\n    fig = make_subplots(\n        rows=1, \n        cols=3, \n        subplot_titles=error_types,\n        horizontal_spacing=0.1\n    )\n    \n    # Keep track of trace indices\n    total_traces = []\n    age_group_traces = []\n    \n    # Create base traces (aggregated view)\n    for i, error_type in enumerate(error_types, 1):\n        error_data = error_df[error_df['error_type'] == error_type]\n        fp_data = false_positives_df[false_positives_df['error_type'] == error_type]\n        \n        # Calculate aggregated values\n        total_caught = (~error_data['missed']).sum()\n        total_missed = error_data['missed'].sum()\n        total_fp = fp_data['count'].sum()\n        \n        # Add traces for aggregated view\n        fig.add_trace(\n            go.Bar(\n                x=['All Ages'],\n                y=[total_caught],\n                name='Caught' if i == 1 else None,\n                marker_color=colors['caught'],\n                showlegend=i == 1,\n                legendgroup='caught',\n                hovertemplate='Caught: %{y}<br>Error Type: ' + error_type + '<extra></extra>',\n            ),\n            row=1, col=i\n        )\n        total_traces.append(len(fig.data) - 1)\n        \n        fig.add_trace(\n            go.Bar(\n                x=['All Ages'],\n                y=[total_missed],\n                name='Missed' if i == 1 else None,\n                marker_color=colors['missed'],\n                showlegend=i == 1,\n                legendgroup='missed',\n                hovertemplate='Missed: %{y}<br>Error Type: ' + error_type + '<extra></extra>',\n            ),\n            row=1, col=i\n        )\n        total_traces.append(len(fig.data) - 1)\n        \n        fig.add_trace(\n            go.Bar(\n                x=['All Ages'],\n                y=[total_fp],\n                name='False Positives' if i == 1 else None,\n                marker_color=colors['false_positives'],\n                showlegend=i == 1,\n                legendgroup='false_positives',\n                hovertemplate='False Positives: %{y}<br>Error Type: ' + error_type + '<extra></extra>',\n            ),\n            row=1, col=i\n        )\n        total_traces.append(len(fig.data) - 1)\n        \n        # Add age group traces (initially hidden)\n        for age_code in age_groups:\n            age_label = get_age_label(age_code)\n            age_data = error_data[error_data['age'] == age_code]\n            age_fp = fp_data[fp_data['age'] == age_code]\n            \n            # Calculate values\n            caught = (~age_data['missed']).sum()\n            missed = age_data['missed'].sum()\n            fp_count = age_fp['count'].sum() if not age_fp.empty else 0\n            \n            fig.add_trace(\n                go.Bar(\n                    x=[age_label],\n                    y=[caught],\n                    name='Caught',\n                    marker_color=colors['caught'],\n                    showlegend=False,\n                    visible=False,\n                    legendgroup='caught',\n                    hovertemplate=f'{age_label}<br>Caught: %{{y}}<extra></extra>',\n                ),\n                row=1, col=i\n            )\n            age_group_traces.append(len(fig.data) - 1)\n            \n            fig.add_trace(\n                go.Bar(\n                    x=[age_label],\n                    y=[missed],\n                    name='Missed',\n                    marker_color=colors['missed'],\n                    showlegend=False,\n                    visible=False,\n                    legendgroup='missed',\n                    hovertemplate=f'{age_label}<br>Missed: %{{y}}<extra></extra>',\n                ),\n                row=1, col=i\n            )\n            age_group_traces.append(len(fig.data) - 1)\n            \n            fig.add_trace(\n                go.Bar(\n                    x=[age_label],\n                    y=[fp_count],\n                    name='False Positives',\n                    marker_color=colors['false_positives'],\n                    showlegend=False,\n                    visible=False,\n                    legendgroup='false_positives',\n                    hovertemplate=f'{age_label}<br>False Positives: %{{y}}<extra></extra>',\n                ),\n                row=1, col=i\n            )\n            age_group_traces.append(len(fig.data) - 1)\n\n    # Add buttons for age group selection\n    buttons = [\n        dict(\n            args=[{\n                'visible': [i in total_traces for i in range(len(fig.data))]\n            }],\n            label=\"All Ages\",\n            method=\"restyle\"\n        )\n    ]\n    \n    # Add button for each age group\n    for idx, age_code in enumerate(age_groups):\n        age_label = get_age_label(age_code)\n        age_visibility = []\n        for i in range(len(fig.data)):\n            subplot_idx = i // (3 * (len(age_groups) + 1))\n            is_age_trace = (i - (subplot_idx * 3 * (len(age_groups) + 1)) - 3) // 3 == idx\n            age_visibility.append(is_age_trace)\n        \n        buttons.append(dict(\n            args=[{'visible': age_visibility}],\n            label=age_label,\n            method=\"restyle\"\n        ))\n\n    # Update layout\n    fig.update_layout(\n        barmode='stack',\n        title_text=f\"{type.capitalize()} Mode: Error Distribution by Type and Age Group\",\n        height=500,\n        width=1000,\n        showlegend=True,\n        legend_title_text=\"Error Categories\",\n        hovermode='x unified',\n        margin=dict(l=50, r=120, t=130, b=50),\n        updatemenus=[dict(\n            buttons=buttons,\n            direction=\"down\",\n            showactive=True,\n            x=1.2,\n            xanchor=\"right\",\n            y=1.1,\n            yanchor=\"bottom\",\n            bgcolor='white',\n            bordercolor='darkgray',\n            font=dict(size=12),\n            pad=dict(r=10, t=10)\n        )],\n        annotations=[\n            dict(\n                text=title,\n                x=x,\n                y=1.025,\n                xref=\"paper\",\n                yref=\"paper\",\n                showarrow=False,\n                font=dict(size=14)\n            )\n            for title, x in zip(error_types, [0.13, 0.5, 0.87])\n        ]\n    )\n\n    # Update axes labels\n    fig.update_yaxes(title_text=\"Count\", row=1, col=1)\n    \n    return fig\n\n\ndef create_heatmap(error_df, type):\n    \"\"\"\n    Create Plotly heatmap for average error times with YlOrRd color scale and zero minimum.\n    Uses zero values only when no non-zero values exist for a particular \n    instance/error type combination.\n    \"\"\"\n    all_data_matrix = pd.pivot_table(\n        error_df,\n        values='time',\n        index='instance',\n        columns='error_type',\n        aggfunc=lambda x: list(x)\n    )\n    \n    # Create matrix for final values\n    time_matrix = pd.DataFrame(\n        index=all_data_matrix.index,\n        columns=all_data_matrix.columns,\n        dtype=float\n    )\n    \n    # Fill in averages, using non-zero values when available, zero otherwise\n    for idx in all_data_matrix.index:\n        for col in all_data_matrix.columns:\n            values = all_data_matrix.loc[idx, col]\n            non_zero_values = [v for v in values if v > 0]\n            if non_zero_values:\n                time_matrix.loc[idx, col] = np.mean(non_zero_values)\n            else:\n                # If only zeros exist for this cell, use 0\n                time_matrix.loc[idx, col] = 0\n    \n    # print(f\"\\n{type} Mode - Time Matrix Statistics:\")\n    # print(f\"Min value: {time_matrix.values.min()}\")\n    # print(f\"Max value: {time_matrix.values.max()}\")\n    \n    hover_text = np.empty(time_matrix.shape, dtype=object)\n    for i in range(time_matrix.shape[0]):\n        for j in range(time_matrix.shape[1]):\n            values = all_data_matrix.iloc[i, j]\n            non_zero_count = sum(1 for v in values if v > 0)\n            total_count = len(values)\n            if non_zero_count > 0:\n                hover_text[i, j] = f\"Instance: {time_matrix.index[i]}<br>\" \\\n                                 f\"Error Type: {time_matrix.columns[j]}<br>\" \\\n                                 f\"Avg Time: {time_matrix.iloc[i, j]:.2f}<br>\" \\\n                                 f\"(from {non_zero_count} non-zero values)\"\n            else:\n                hover_text[i, j] = f\"Instance: {time_matrix.index[i]}<br>\" \\\n                                 f\"Error Type: {time_matrix.columns[j]}<br>\" \\\n                                 f\"Time: 0 (all {total_count} values were zero)\"\n    \n    fig = go.Figure(data=go.Heatmap(\n        z=time_matrix.values,\n        x=time_matrix.columns,\n        y=time_matrix.index,\n        colorscale='YlOrRd',\n        showscale=True,\n        text=np.round(time_matrix.values, 2),\n        texttemplate='%{text}',\n        textfont={'size': 10},\n        hovertemplate='%{customdata}<extra></extra>',\n        customdata=hover_text,\n        zmin=0,  # Set minimum value to 0\n        zmid=time_matrix.values.max() / 2 if time_matrix.values.max() > 0 else 0.5,  # Set midpoint\n        zauto=False  # Disable automatic range\n    ))\n    \n    fig.update_layout(\n        title=f'{type.capitalize()} Mode: Average Error Resolution Time by Instance<br><sub>*Using non-zero values where available; zero values shown where no non-zero times exist</sub>',\n        xaxis_title='Error Type',\n        yaxis_title='Instance',\n        height=500,\n        coloraxis_colorbar_title='Time'\n    )\n\n    fig = go.Figure(data=go.Heatmap(\n        z=time_matrix.values,\n        x=time_matrix.columns,\n        y=time_matrix.index,\n        colorscale='YlOrRd',\n        showscale=True,\n        text=np.round(time_matrix.values, 2),\n        texttemplate='%{text}',\n        textfont={'size': 10},\n        hovertemplate='%{customdata}<extra></extra>',\n        customdata=hover_text,\n        zmin=0,\n        zmid=time_matrix.values.max() / 2 if time_matrix.values.max() > 0 else 0.5,\n        zauto=False\n    ))\n    \n    fig.update_layout(\n        title=f'{type.capitalize()} Mode: Average Error Resolution Time by Instance<br><sub>Using non-zero values where available; zero values shown where no non-zero times exist</sub>',\n        xaxis_title='Error Type',\n        yaxis_title='Instance',\n        height=500,\n        width=1000,  # Set explicit width\n        margin=dict(l=50, r=50, t=100, b=50)\n    )\n    \n    return fig\n\n\ndef create_response_time_histogram(planned_df, reactive_df):\n    \"\"\"\n    Create a combined histogram and line chart comparing planned and reactive response times.\n    \"\"\"\n    # Calculate average response times for non-zero values for both modes\n    error_types = ['CameraError', 'FlightError', 'HardwareError']\n    \n    # Process planned data\n    planned_times = {}\n    for error_type in error_types:\n        times = planned_df[planned_df['error_type'] == error_type]['time']\n        non_zero_times = times[times > 0]\n        planned_times[error_type] = non_zero_times.mean() if len(non_zero_times) > 0 else 0\n\n    # Process reactive data\n    reactive_times = {}\n    for error_type in error_types:\n        times = reactive_df[reactive_df['error_type'] == error_type]['time']\n        non_zero_times = times[times > 0]\n        reactive_times[error_type] = non_zero_times.mean() if len(non_zero_times) > 0 else 0\n\n    # Create figure with secondary y-axis\n    fig = go.Figure()\n\n    # Add bars for planned mode\n    fig.add_trace(\n        go.Bar(\n            name='Planned',\n            x=error_types,\n            y=list(planned_times.values()),\n            text=np.round(list(planned_times.values()), 3),\n            textposition='auto',\n            marker_color='rgba(158,202,225,0.6)',\n            hovertemplate='Planned Mode<br>%{x}: %{y:.3f}s<extra></extra>'\n        )\n    )\n\n    # Add bars for reactive mode\n    fig.add_trace(\n        go.Bar(\n            name='Reactive',\n            x=error_types,\n            y=list(reactive_times.values()),\n            text=np.round(list(reactive_times.values()), 3),\n            textposition='auto',\n            marker_color='rgba(94,158,217,0.6)',\n            hovertemplate='Reactive Mode<br>%{x}: %{y:.3f}s<extra></extra>'\n        )\n    )\n\n    # Add lines connecting the points\n    fig.add_trace(\n        go.Scatter(\n            name='Planned (trend)',\n            x=error_types,\n            y=list(planned_times.values()),\n            mode='lines+markers',\n            line=dict(color='rgb(58,102,171)', width=2),\n            marker=dict(size=8),\n            hovertemplate='Planned Mode<br>%{x}: %{y:.3f}s<extra></extra>'\n        )\n    )\n\n    fig.add_trace(\n        go.Scatter(\n            name='Reactive (trend)',\n            x=error_types,\n            y=list(reactive_times.values()),\n            mode='lines+markers',\n            line=dict(color='rgb(137,59,59)', width=2),\n            marker=dict(size=8),\n            hovertemplate='Reactive Mode<br>%{x}: %{y:.3f}s<extra></extra>'\n        )\n    )\n\n    # Update layout\n    fig.update_layout(\n        title='Average Response Time Comparison: Planned vs Reactive',\n        xaxis_title='Error Type',\n        yaxis_title='Average Response Time (seconds)',\n        height=500,\n        width=1000,\n        margin=dict(l=50, r=50, t=100, b=50),\n        barmode='group',\n        hovermode='x unified',\n        legend=dict(\n            orientation=\"h\",\n            yanchor=\"bottom\",\n            y=1.02,\n            xanchor=\"right\",\n            x=1\n        )\n    )\n    \n    return fig\n\n\ndef planned_plot():\n    today = datetime.strftime(datetime.now(), '%d-%m-%Y')\n    error_df, planned_df, false_positives_df, counter = process_json_files('*-planned.json')\n    print(f\"Found {counter} data points as of {today}.\")\n    \n    # Create and display interactive distribution plot\n    dist_fig = create_interactive_visualization(error_df, false_positives_df, 'planned')\n    dist_fig.show()\n    \n    # Create and display heatmap\n    heatmap_fig = create_heatmap(error_df, 'planned')\n    heatmap_fig.show()\n    \n\ndef reactive_plot():\n    today = datetime.strftime(datetime.now(), '%d-%m-%Y')\n    error_df, reactive_df, false_positives_df, counter = process_json_files('*-reactive.json')\n    print(f\"Found {counter} data points as of {today}.\")\n    \n    # Create and display interactive distribution plot\n    dist_fig = create_interactive_visualization(error_df, false_positives_df, 'reactive')\n    dist_fig.show()\n    \n    # Create and display heatmap\n    heatmap_fig = create_heatmap(error_df, 'reactive')\n    heatmap_fig.show()\n\n\ndef create_histogram():\n    \"\"\"\n    Create visualization with both planned and reactive data.\n    \"\"\"\n    today = datetime.strftime(datetime.now(), '%d-%m-%Y')\n    \n    # Process planned data\n    planned_error_df, planned_df, planned_fp_df, planned_counter = process_json_files('*-planned.json')\n    print(f\"Found {planned_counter} planned mode data points as of {today}.\")\n    \n    # Process reactive data\n    reactive_error_df, reactive_df, reactive_fp_df, reactive_counter = process_json_files('*-reactive.json')\n    print(f\"Found {reactive_counter} reactive mode data points as of {today}.\")\n       \n    # Create combined response time visualization\n    response_time_fig = create_response_time_histogram(planned_error_df, reactive_error_df)\n    response_time_fig.show()\n```\n:::\n\n\n::: {.panel-tabset}\n## Planned\n\n::: {#df2f615b .cell execution_count=2}\n``` {.python .cell-code}\nplanned_plot()\ncreate_histogram()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFound 11 data points as of 13-02-2025.\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"15c33c01-6fa1-41ac-a1ef-576b430aa035\" class=\"plotly-graph-div\" style=\"height:500px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"15c33c01-6fa1-41ac-a1ef-576b430aa035\")) {                    Plotly.newPlot(                        \"15c33c01-6fa1-41ac-a1ef-576b430aa035\",                        [{\"hovertemplate\":\"Caught: %{y}\\u003cbr\\u003eError Type: CameraError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":true,\"x\":[\"All Ages\"],\"y\":[7],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"Missed: %{y}\\u003cbr\\u003eError Type: CameraError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":true,\"x\":[\"All Ages\"],\"y\":[70],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"False Positives: %{y}\\u003cbr\\u003eError Type: CameraError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":true,\"x\":[\"All Ages\"],\"y\":[3],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[1],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[62],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[6],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[8],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[3],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"Caught: %{y}\\u003cbr\\u003eError Type: FlightError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[1],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"Missed: %{y}\\u003cbr\\u003eError Type: FlightError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[76],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"False Positives: %{y}\\u003cbr\\u003eError Type: FlightError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[3],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[1],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[62],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[14],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[3],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"Caught: %{y}\\u003cbr\\u003eError Type: HardwareError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[3],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"Missed: %{y}\\u003cbr\\u003eError Type: HardwareError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[74],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"False Positives: %{y}\\u003cbr\\u003eError Type: HardwareError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[5],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[3],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[60],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"12-17\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"12-17\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[14],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[5],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,0.26666666666666666]},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Count\"}},\"xaxis2\":{\"anchor\":\"y2\",\"domain\":[0.3666666666666667,0.6333333333333333]},\"yaxis2\":{\"anchor\":\"x2\",\"domain\":[0.0,1.0]},\"xaxis3\":{\"anchor\":\"y3\",\"domain\":[0.7333333333333334,1.0]},\"yaxis3\":{\"anchor\":\"x3\",\"domain\":[0.0,1.0]},\"annotations\":[{\"font\":{\"size\":14},\"showarrow\":false,\"text\":\"CameraError\",\"x\":0.13,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":1.025,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":14},\"showarrow\":false,\"text\":\"FlightError\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":1.025,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":14},\"showarrow\":false,\"text\":\"HardwareError\",\"x\":0.87,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":1.025,\"yanchor\":\"bottom\",\"yref\":\"paper\"}],\"title\":{\"text\":\"Planned Mode: Error Distribution by Type and Age Group\"},\"legend\":{\"title\":{\"text\":\"Error Categories\"}},\"margin\":{\"l\":50,\"r\":120,\"t\":130,\"b\":50},\"barmode\":\"stack\",\"height\":500,\"width\":1000,\"showlegend\":true,\"hovermode\":\"x unified\",\"updatemenus\":[{\"bgcolor\":\"white\",\"bordercolor\":\"darkgray\",\"buttons\":[{\"args\":[{\"visible\":[true,true,true,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false]}],\"label\":\"All Ages\",\"method\":\"restyle\"},{\"args\":[{\"visible\":[false,false,false,true,true,true,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,true,true,true,false,false,false]}],\"label\":\"12-17\",\"method\":\"restyle\"},{\"args\":[{\"visible\":[false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,true,true,true]}],\"label\":\"25-34\",\"method\":\"restyle\"}],\"direction\":\"down\",\"font\":{\"size\":12},\"pad\":{\"r\":10,\"t\":10},\"showactive\":true,\"x\":1.2,\"xanchor\":\"right\",\"y\":1.1,\"yanchor\":\"bottom\"}]},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('15c33c01-6fa1-41ac-a1ef-576b430aa035');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"ed1f08d7-a18b-4ee8-83a0-43727dbc16e6\" class=\"plotly-graph-div\" style=\"height:500px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ed1f08d7-a18b-4ee8-83a0-43727dbc16e6\")) {                    Plotly.newPlot(                        \"ed1f08d7-a18b-4ee8-83a0-43727dbc16e6\",                        [{\"colorscale\":[[0.0,\"rgb(255,255,204)\"],[0.125,\"rgb(255,237,160)\"],[0.25,\"rgb(254,217,118)\"],[0.375,\"rgb(254,178,76)\"],[0.5,\"rgb(253,141,60)\"],[0.625,\"rgb(252,78,42)\"],[0.75,\"rgb(227,26,28)\"],[0.875,\"rgb(189,0,38)\"],[1.0,\"rgb(128,0,38)\"]],\"customdata\":[[\"Instance: 1\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eAvg Time: 0.28\\u003cbr\\u003e(from 3 non-zero values)\",\"Instance: 1\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eAvg Time: 3.03\\u003cbr\\u003e(from 1 non-zero values)\",\"Instance: 1\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eAvg Time: 2.73\\u003cbr\\u003e(from 2 non-zero values)\"],[\"Instance: 2\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 2\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 2\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\"],[\"Instance: 3\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 3\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 3\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\"],[\"Instance: 4\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eAvg Time: 0.40\\u003cbr\\u003e(from 2 non-zero values)\",\"Instance: 4\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 4\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\"],[\"Instance: 5\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 5\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 5\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\"],[\"Instance: 6\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eAvg Time: 0.70\\u003cbr\\u003e(from 2 non-zero values)\",\"Instance: 6\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 6\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eAvg Time: 1.93\\u003cbr\\u003e(from 1 non-zero values)\"],[\"Instance: 7\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 7\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\",\"Instance: 7\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 11 values were zero)\"]],\"hovertemplate\":\"%{customdata}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"showscale\":true,\"text\":[[0.28,3.03,2.73],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.4,0.0,0.0],[0.0,0.0,0.0],[0.7,0.0,1.93],[0.0,0.0,0.0]],\"textfont\":{\"size\":10},\"texttemplate\":\"%{text}\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[1,2,3,4,5,6,7],\"z\":[[0.2777777777777777,3.03333333333333,2.7333333333333316],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.4,0.0,0.0],[0.0,0.0,0.0],[0.7,0.0,1.93333333333334],[0.0,0.0,0.0]],\"zauto\":false,\"zmid\":1.516666666666665,\"zmin\":0,\"type\":\"heatmap\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"margin\":{\"l\":50,\"r\":50,\"t\":100,\"b\":50},\"title\":{\"text\":\"Planned Mode: Average Error Resolution Time by Instance\\u003cbr\\u003e\\u003csub\\u003eUsing non-zero values where available; zero values shown where no non-zero times exist\\u003c\\u002fsub\\u003e\"},\"xaxis\":{\"title\":{\"text\":\"Error Type\"}},\"yaxis\":{\"title\":{\"text\":\"Instance\"}},\"height\":500,\"width\":1000},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('ed1f08d7-a18b-4ee8-83a0-43727dbc16e6');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nFound 11 planned mode data points as of 13-02-2025.\nFound 1 reactive mode data points as of 13-02-2025.\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"ef7aa51d-bd74-47f7-90c0-8dd8be572350\" class=\"plotly-graph-div\" style=\"height:500px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ef7aa51d-bd74-47f7-90c0-8dd8be572350\")) {                    Plotly.newPlot(                        \"ef7aa51d-bd74-47f7-90c0-8dd8be572350\",                        [{\"hovertemplate\":\"Planned Mode\\u003cbr\\u003e%{x}: %{y:.3f}s\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"marker\":{\"color\":\"rgba(158,202,225,0.6)\"},\"name\":\"Planned\",\"text\":[0.433,3.033,2.467],\"textposition\":\"auto\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[0.4333333333333333,3.03333333333333,2.4666666666666677],\"type\":\"bar\"},{\"hovertemplate\":\"Reactive Mode\\u003cbr\\u003e%{x}: %{y:.3f}s\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"marker\":{\"color\":\"rgba(94,158,217,0.6)\"},\"name\":\"Reactive\",\"text\":[0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[0,0,0],\"type\":\"bar\"},{\"hovertemplate\":\"Planned Mode\\u003cbr\\u003e%{x}: %{y:.3f}s\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"line\":{\"color\":\"rgb(58,102,171)\",\"width\":2},\"marker\":{\"size\":8},\"mode\":\"lines+markers\",\"name\":\"Planned (trend)\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[0.4333333333333333,3.03333333333333,2.4666666666666677],\"type\":\"scatter\"},{\"hovertemplate\":\"Reactive Mode\\u003cbr\\u003e%{x}: %{y:.3f}s\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"line\":{\"color\":\"rgb(137,59,59)\",\"width\":2},\"marker\":{\"size\":8},\"mode\":\"lines+markers\",\"name\":\"Reactive (trend)\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[0,0,0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"margin\":{\"l\":50,\"r\":50,\"t\":100,\"b\":50},\"legend\":{\"orientation\":\"h\",\"yanchor\":\"bottom\",\"y\":1.02,\"xanchor\":\"right\",\"x\":1},\"title\":{\"text\":\"Average Response Time Comparison: Planned vs Reactive\"},\"xaxis\":{\"title\":{\"text\":\"Error Type\"}},\"yaxis\":{\"title\":{\"text\":\"Average Response Time (seconds)\"}},\"height\":500,\"width\":1000,\"barmode\":\"group\",\"hovermode\":\"x unified\"},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('ef7aa51d-bd74-47f7-90c0-8dd8be572350');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n## Reactive\n\n::: {#c82f0409 .cell execution_count=3}\n``` {.python .cell-code}\nreactive_plot()\ncreate_histogram()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFound 1 data points as of 13-02-2025.\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"3a7b141d-2f0f-4c23-a41e-5dc6246d5249\" class=\"plotly-graph-div\" style=\"height:500px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"3a7b141d-2f0f-4c23-a41e-5dc6246d5249\")) {                    Plotly.newPlot(                        \"3a7b141d-2f0f-4c23-a41e-5dc6246d5249\",                        [{\"hovertemplate\":\"Caught: %{y}\\u003cbr\\u003eError Type: CameraError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":true,\"x\":[\"All Ages\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"Missed: %{y}\\u003cbr\\u003eError Type: CameraError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":true,\"x\":[\"All Ages\"],\"y\":[7],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"False Positives: %{y}\\u003cbr\\u003eError Type: CameraError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":true,\"x\":[\"All Ages\"],\"y\":[2],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[7],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[2],\"type\":\"bar\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"hovertemplate\":\"Caught: %{y}\\u003cbr\\u003eError Type: FlightError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"Missed: %{y}\\u003cbr\\u003eError Type: FlightError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[7],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"False Positives: %{y}\\u003cbr\\u003eError Type: FlightError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[1],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[7],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[1],\"type\":\"bar\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"hovertemplate\":\"Caught: %{y}\\u003cbr\\u003eError Type: HardwareError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"Missed: %{y}\\u003cbr\\u003eError Type: HardwareError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[7],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"False Positives: %{y}\\u003cbr\\u003eError Type: HardwareError\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"showlegend\":false,\"x\":[\"All Ages\"],\"y\":[3],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eCaught: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"caught\",\"marker\":{\"color\":\"lightgreen\"},\"name\":\"Caught\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[0],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eMissed: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"missed\",\"marker\":{\"color\":\"lightcoral\"},\"name\":\"Missed\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[7],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"hovertemplate\":\"25-34\\u003cbr\\u003eFalse Positives: %{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"false_positives\",\"marker\":{\"color\":\"lightskyblue\"},\"name\":\"False Positives\",\"showlegend\":false,\"visible\":false,\"x\":[\"25-34\"],\"y\":[3],\"type\":\"bar\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,0.26666666666666666]},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Count\"}},\"xaxis2\":{\"anchor\":\"y2\",\"domain\":[0.3666666666666667,0.6333333333333333]},\"yaxis2\":{\"anchor\":\"x2\",\"domain\":[0.0,1.0]},\"xaxis3\":{\"anchor\":\"y3\",\"domain\":[0.7333333333333334,1.0]},\"yaxis3\":{\"anchor\":\"x3\",\"domain\":[0.0,1.0]},\"annotations\":[{\"font\":{\"size\":14},\"showarrow\":false,\"text\":\"CameraError\",\"x\":0.13,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":1.025,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":14},\"showarrow\":false,\"text\":\"FlightError\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":1.025,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":14},\"showarrow\":false,\"text\":\"HardwareError\",\"x\":0.87,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":1.025,\"yanchor\":\"bottom\",\"yref\":\"paper\"}],\"title\":{\"text\":\"Reactive Mode: Error Distribution by Type and Age Group\"},\"legend\":{\"title\":{\"text\":\"Error Categories\"}},\"margin\":{\"l\":50,\"r\":120,\"t\":130,\"b\":50},\"barmode\":\"stack\",\"height\":500,\"width\":1000,\"showlegend\":true,\"hovermode\":\"x unified\",\"updatemenus\":[{\"bgcolor\":\"white\",\"bordercolor\":\"darkgray\",\"buttons\":[{\"args\":[{\"visible\":[true,true,true,false,false,false,true,true,true,false,false,false,true,true,true,false,false,false]}],\"label\":\"All Ages\",\"method\":\"restyle\"},{\"args\":[{\"visible\":[false,false,false,true,true,true,false,false,false,true,true,true,false,false,false,true,true,true]}],\"label\":\"25-34\",\"method\":\"restyle\"}],\"direction\":\"down\",\"font\":{\"size\":12},\"pad\":{\"r\":10,\"t\":10},\"showactive\":true,\"x\":1.2,\"xanchor\":\"right\",\"y\":1.1,\"yanchor\":\"bottom\"}]},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('3a7b141d-2f0f-4c23-a41e-5dc6246d5249');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"df2f8fbd-d62c-4628-858c-6ab3a616ced0\" class=\"plotly-graph-div\" style=\"height:500px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"df2f8fbd-d62c-4628-858c-6ab3a616ced0\")) {                    Plotly.newPlot(                        \"df2f8fbd-d62c-4628-858c-6ab3a616ced0\",                        [{\"colorscale\":[[0.0,\"rgb(255,255,204)\"],[0.125,\"rgb(255,237,160)\"],[0.25,\"rgb(254,217,118)\"],[0.375,\"rgb(254,178,76)\"],[0.5,\"rgb(253,141,60)\"],[0.625,\"rgb(252,78,42)\"],[0.75,\"rgb(227,26,28)\"],[0.875,\"rgb(189,0,38)\"],[1.0,\"rgb(128,0,38)\"]],\"customdata\":[[\"Instance: 1\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 1\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 1\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\"],[\"Instance: 2\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 2\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 2\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\"],[\"Instance: 3\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 3\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 3\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\"],[\"Instance: 4\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 4\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 4\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\"],[\"Instance: 5\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 5\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 5\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\"],[\"Instance: 6\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 6\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 6\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\"],[\"Instance: 7\\u003cbr\\u003eError Type: CameraError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 7\\u003cbr\\u003eError Type: FlightError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\",\"Instance: 7\\u003cbr\\u003eError Type: HardwareError\\u003cbr\\u003eTime: 0 (all 1 values were zero)\"]],\"hovertemplate\":\"%{customdata}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"showscale\":true,\"text\":[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],\"textfont\":{\"size\":10},\"texttemplate\":\"%{text}\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[1,2,3,4,5,6,7],\"z\":[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],\"zauto\":false,\"zmid\":0.5,\"zmin\":0,\"type\":\"heatmap\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"margin\":{\"l\":50,\"r\":50,\"t\":100,\"b\":50},\"title\":{\"text\":\"Reactive Mode: Average Error Resolution Time by Instance\\u003cbr\\u003e\\u003csub\\u003eUsing non-zero values where available; zero values shown where no non-zero times exist\\u003c\\u002fsub\\u003e\"},\"xaxis\":{\"title\":{\"text\":\"Error Type\"}},\"yaxis\":{\"title\":{\"text\":\"Instance\"}},\"height\":500,\"width\":1000},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('df2f8fbd-d62c-4628-858c-6ab3a616ced0');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nFound 11 planned mode data points as of 13-02-2025.\nFound 1 reactive mode data points as of 13-02-2025.\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"a79f8bc2-83df-4d17-ac8d-903bbc2404d7\" class=\"plotly-graph-div\" style=\"height:500px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a79f8bc2-83df-4d17-ac8d-903bbc2404d7\")) {                    Plotly.newPlot(                        \"a79f8bc2-83df-4d17-ac8d-903bbc2404d7\",                        [{\"hovertemplate\":\"Planned Mode\\u003cbr\\u003e%{x}: %{y:.3f}s\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"marker\":{\"color\":\"rgba(158,202,225,0.6)\"},\"name\":\"Planned\",\"text\":[0.433,3.033,2.467],\"textposition\":\"auto\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[0.4333333333333333,3.03333333333333,2.4666666666666677],\"type\":\"bar\"},{\"hovertemplate\":\"Reactive Mode\\u003cbr\\u003e%{x}: %{y:.3f}s\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"marker\":{\"color\":\"rgba(94,158,217,0.6)\"},\"name\":\"Reactive\",\"text\":[0.0,0.0,0.0],\"textposition\":\"auto\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[0,0,0],\"type\":\"bar\"},{\"hovertemplate\":\"Planned Mode\\u003cbr\\u003e%{x}: %{y:.3f}s\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"line\":{\"color\":\"rgb(58,102,171)\",\"width\":2},\"marker\":{\"size\":8},\"mode\":\"lines+markers\",\"name\":\"Planned (trend)\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[0.4333333333333333,3.03333333333333,2.4666666666666677],\"type\":\"scatter\"},{\"hovertemplate\":\"Reactive Mode\\u003cbr\\u003e%{x}: %{y:.3f}s\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"line\":{\"color\":\"rgb(137,59,59)\",\"width\":2},\"marker\":{\"size\":8},\"mode\":\"lines+markers\",\"name\":\"Reactive (trend)\",\"x\":[\"CameraError\",\"FlightError\",\"HardwareError\"],\"y\":[0,0,0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"margin\":{\"l\":50,\"r\":50,\"t\":100,\"b\":50},\"legend\":{\"orientation\":\"h\",\"yanchor\":\"bottom\",\"y\":1.02,\"xanchor\":\"right\",\"x\":1},\"title\":{\"text\":\"Average Response Time Comparison: Planned vs Reactive\"},\"xaxis\":{\"title\":{\"text\":\"Error Type\"}},\"yaxis\":{\"title\":{\"text\":\"Average Response Time (seconds)\"}},\"height\":500,\"width\":1000,\"barmode\":\"group\",\"hovermode\":\"x unified\"},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('a79f8bc2-83df-4d17-ac8d-903bbc2404d7');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n:::\n\n",
    "supporting": [
      "analysis copy_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script type=\"text/javascript\">\nwindow.PlotlyConfig = {MathJaxConfig: 'local'};\nif (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\nif (typeof require !== 'undefined') {\nrequire.undef(\"plotly\");\nrequirejs.config({\n    paths: {\n        'plotly': ['https://cdn.plot.ly/plotly-2.35.2.min']\n    }\n});\nrequire(['plotly'], function(Plotly) {\n    window._Plotly = Plotly;\n});\n}\n</script>\n\n"
      ]
    }
  }
}